// Mocks generated by Mockito 5.4.4 from annotations
// in nana/test/modules/product/product_listing/data/repositories/product_listing_repo_imp_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:fpdart/fpdart.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:nana/core/utils/errors/failure.dart' as _i5;
import 'package:nana/modules/product/product_listing/data/data_source/remote_data_source/network_responses/most_use_products_response.dart'
    as _i6;
import 'package:nana/modules/product/product_listing/data/data_source/remote_data_source/network_responses/recommended_product_response.dart'
    as _i8;
import 'package:nana/modules/product/product_listing/data/data_source/remote_data_source/network_responses/snack_products_response.dart'
    as _i9;
import 'package:nana/modules/product/product_listing/data/data_source/remote_data_source/product_listing_remote_data_source.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ProductListingRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductListingRemoteDataSource extends _i1.Mock
    implements _i2.ProductListingRemoteDataSource {
  @override
  _i3.Future<
      _i4
      .Either<_i5.Failure, _i6.MostUseProductsResponse>> fetchMostUseProducts({
    required int? limit,
    required int? offset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMostUseProducts,
          [],
          {
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i3
            .Future<_i4.Either<_i5.Failure, _i6.MostUseProductsResponse>>.value(
            _i7.dummyValue<
                _i4.Either<_i5.Failure, _i6.MostUseProductsResponse>>(
          this,
          Invocation.method(
            #fetchMostUseProducts,
            [],
            {
              #limit: limit,
              #offset: offset,
            },
          ),
        )),
        returnValueForMissingStub: _i3
            .Future<_i4.Either<_i5.Failure, _i6.MostUseProductsResponse>>.value(
            _i7.dummyValue<
                _i4.Either<_i5.Failure, _i6.MostUseProductsResponse>>(
          this,
          Invocation.method(
            #fetchMostUseProducts,
            [],
            {
              #limit: limit,
              #offset: offset,
            },
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.Failure, _i6.MostUseProductsResponse>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, _i8.RecommendedProductResponse>>
      fetchRecommendedProducts() => (super.noSuchMethod(
            Invocation.method(
              #fetchRecommendedProducts,
              [],
            ),
            returnValue: _i3.Future<
                    _i4
                    .Either<_i5.Failure, _i8.RecommendedProductResponse>>.value(
                _i7.dummyValue<
                    _i4.Either<_i5.Failure, _i8.RecommendedProductResponse>>(
              this,
              Invocation.method(
                #fetchRecommendedProducts,
                [],
              ),
            )),
            returnValueForMissingStub: _i3.Future<
                    _i4
                    .Either<_i5.Failure, _i8.RecommendedProductResponse>>.value(
                _i7.dummyValue<
                    _i4.Either<_i5.Failure, _i8.RecommendedProductResponse>>(
              this,
              Invocation.method(
                #fetchRecommendedProducts,
                [],
              ),
            )),
          ) as _i3
              .Future<_i4.Either<_i5.Failure, _i8.RecommendedProductResponse>>);

  @override
  _i3.Future<
      _i4.Either<_i5.Failure,
          _i9.SnackProductsResponse>> fetchSnackProducts() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSnackProducts,
          [],
        ),
        returnValue: _i3
            .Future<_i4.Either<_i5.Failure, _i9.SnackProductsResponse>>.value(
            _i7.dummyValue<_i4.Either<_i5.Failure, _i9.SnackProductsResponse>>(
          this,
          Invocation.method(
            #fetchSnackProducts,
            [],
          ),
        )),
        returnValueForMissingStub: _i3
            .Future<_i4.Either<_i5.Failure, _i9.SnackProductsResponse>>.value(
            _i7.dummyValue<_i4.Either<_i5.Failure, _i9.SnackProductsResponse>>(
          this,
          Invocation.method(
            #fetchSnackProducts,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.Failure, _i9.SnackProductsResponse>>);
}
